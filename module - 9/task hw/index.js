/*
  –°–æ–∑–¥–∞–π—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞.
  –ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä –≤—ã–±—Ä–∞–≤ Stopwatch http://www.online-stopwatch.com/full-screen-stopwatch/

  –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤ HTML –µ—Å—Ç—å —Ä–∞–∑–º–µ—Ç–∫–∞:

  <div class="stopwatch">
    <p class="time js-time">00:00.0</p>
    <button class="btn js-start">Start</button>
    <button class="btn js-take-lap">Lap</button>
    <button class="btn js-reset">Reset</button>
  </div>
  <ul class="laps js-laps"></ul>

  –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:

  - –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É button.js-start, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç –≤—Ä–µ–º—è
    —Å–æ —Å—Ç–∞—Ä—Ç–∞ –∏ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏, –æ–±–Ω–æ–≤–ª—è—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞ p.js-time
    –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x (–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã.—Å–æ—Ç–Ω–∏_–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥).

    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ç–∞–∫ –∫–∞–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ—Ç–Ω–∏ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥, –∏–Ω—Ç–µ—Ä–≤–∞–ª
                  –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –Ω–µ —á–∞—â–µ —á–µ–º 1 —Ä–∞–∑ –≤ 100 –º—Å.

  - –ö–æ–≥–¥–∞ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –∑–∞–ø—É—â–µ–Ω, —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ button.js-start –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Pause',
    –∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏ –∫–ª–∏–∫–µ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –æ—Å—Ç–∞–≤–Ω–æ–≤–∫—É —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ –±–µ–∑ —Å–±—Ä–æ—Å–∞
    –∑–Ω–∞—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏.

    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –±—É–ª—å –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω/–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.

  - –ï—Å–ª–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–∞—É–∑—ã, —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ button.js-start
    –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Continue'. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∫–ª–∏–∫–µ –≤ –Ω–µ–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏,
    –∞ —Ç–µ–∫—Å—Ç –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Pause'. –¢–æ –µ—Å—Ç—å –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –Ω–∞–∂–∞—Ç–∏—è 'Pause' –ø—Ä–æ—à–ª–æ 6 —Å–µ–∫—É–Ω–¥
    —Å–æ —Å—Ç–∞—Ä—Ç–∞, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ 'Continue' 10 —Å–µ–∫—É–Ω–¥ —Å–ø—É—Å—Ç—è, —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏
    —Å 6 —Å–µ–∫—É–Ω–¥, –∞ –Ω–µ —Å 16.

    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤—Ä–µ–º—è —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–∞—É–∑—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ
                  –ø—Ä–∏ —Ä–∞—Å—Å—á–µ—Ç–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –æ—Ç–Ω–∏–º–∞—è
                  —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞.

  - –ï—Å–ª–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–∞—É–∑—ã, –∫–Ω–æ–ø–∫–∞
    button.js-reset –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞ (–Ω–∞ –Ω–µ–µ –º–æ–∂–Ω–æ –∫–ª–∏–∫–Ω—É—Ç—å), –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    disabled. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏ –∫–ª–∏–∫–µ - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –∏ —Å–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.

  - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ button.js-take-lap –ø—Ä–∏ –∫–ª–∏–∫–µ - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞
    –≤ –º–∞—Å—Å–∏–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ ul.js-laps –Ω–æ–≤–æ–≥–æ li —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x
*/

/*
  ‚ö†Ô∏è –ó–ê–î–ê–ù–ò–ï –ü–û–í–´–®–ï–ù–ù–û–ô –°–õ–û–ñ–ù–û–°–¢–ò - –í–´–ü–û–õ–ù–Ø–¢–¨ –ü–û –ñ–ï–õ–ê–ù–ò–Æ

  –í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞—Å—Å —Å –ø–æ–ª—è–º–∏ –∏ –º–µ—Ç–æ–¥–∞–º–∏.

  –ù–∞ –≤—Ö–æ–¥ –∫–ª–∞—Å—Å Stopwatch –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É –Ω–∞ DOM-—É–∑–µ–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç
  –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–∞ –≤—Å—è —Ä–∞–∑–º–µ—Ç–∫–∞ –¥–ª—è —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞.

  –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —Å–µ–∫—É–Ω–¥–æ–º–µ–Ω—Ç–æ–≤
  –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –≤—Å–µ –æ–Ω–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ.

  –ö –ø—Ä–∏–º–µ—Ä—É:

  new Stopwatch(parentA);
  new Stopwatch(parentB);
  new Stopwatch(parentC);

  –ì–¥–µ parent* —ç—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π DOM-—É–∑–µ–ª.
*/

const startBtn = document.querySelector('button[data-action="start"]');
const stopBtn = document.querySelector('button[data-action="stop"]');
const clockFace = document.querySelector('.clockface');

const timer = {
    id: null,
    startTime: null,
    delteTime : 0,
    isActive: false,

    start(){
        if(this.isActive)return;
        this.isActive = true;
        this.startTime = Date.now() - this.delteTime;

        this.id = setInterval(()=>{
            const currentTime = Date.now();
            this.delteTime = currentTime - this.startTime;
            updateClockFace(this.delteTime);
        }, 100);
    },

    stop(){
        clearInterval(this.id);
        this.isActive = false;
    },

    reset(){
        this.stop();
        this.delteTime = 0;
        updateClockFace(this.delteTime);
    },
};

startBtn.addEventListener('click', handleStartBtnClick); s
stopBtn.addEventListener('click',timer.stop.bind(timer));

function handleStartBtnClick() {
    if (!timer.isActive) {
        timer.start();
        this.textContent = 'Pause';
    } else {
        timer.stop();
        this.textContent = 'Continue';
    }
}


function updateClockFace(time) {
    const formateredTime =  formatTime(time);
    clockFace.textContent = formateredTime;
}

function formatTime(ms) {
    const date = new Date(ms);

    let minutes = date.getMinutes();
    minutes = minutes < 10 ? `0${minutes}` : minutes;

    let seconds = date.getSeconds();
    seconds = seconds < 10 ? `0${seconds}` : seconds;

    let mseconds = String(date.getMilliseconds()).slice(0,1);
    return `${minutes}:${seconds}.${mseconds}`;
}



// 2 + class
// const watches = document.querySelector('.asd');
//
// class Stopwatch {
//     constructor({ watches }) {
//         this.watches = watches;
//         this.startTime = null;
//         this.deltaTime = null;
//         this.id = null;
//         this.isActive = false;
//         this.createTimer();
//         this.startBtn = this.watches.querySelector('.js-start');
//         this.lapBtn = this.watches.querySelector('.js-take-lap');
//         this.resetBtn = this.watches.querySelector('.js-reset');
//         this.timerContent = this.watches.querySelector('.js-time');
//         this.listLaps = this.watches.querySelector('.js-laps');
//     }
//
//     createTimer() {
//         const section = document.createElement('section');
//         section.classList.add('watches');
//
//         const div = document.createElement('div');
//         div.classList.add('stopwatch');
//
//         const p = document.createElement('p');
//         p.classList.add('time');
//         p.classList.add('js-time');
//         p.textContent = '00:00.0';
//
//         const startBtn = document.createElement('button');
//         startBtn.classList.add('btn');
//         startBtn.classList.add('js-start');
//         startBtn.textContent = 'Start';
//         startBtn.addEventListener('click', this.handleStartTimer.bind(this));
//
//         const lapBtn = document.createElement('button');
//         lapBtn.classList.add('btn');
//         lapBtn.classList.add('js-take-lap');
//         lapBtn.textContent = 'Lap';
//         lapBtn.addEventListener('click', this.hadleLapTimer.bind(this));
//
//         const resetBtn = document.createElement('button');
//         resetBtn.classList.add('btn');
//         resetBtn.classList.add('js-reset');
//         resetBtn.textContent = 'Reset';
//         resetBtn.addEventListener('click', this.hadleResetTimer.bind(this));
//
//         div.append(p, startBtn, lapBtn, resetBtn);
//
//         const list = document.createElement('ul');
//         list.classList.add('laps');
//         list.classList.add('js-laps');
//
//         section.append(div, list);
//         this.watches.append(section);
//     }
//     handleStartTimer({ target }) {
//         if (!this.isActive) {
//             this.setActiveBtn(target);
//             this.startTick(target);
//             this.startBtn.textContent = 'Pause';
//         } else {
//             this.pauseTick(target);
//             this.startBtn.textContent = 'Continue';
//         }
//     }
//     startTick(target) {
//         if (this.isActive) return;
//         this.isActive = true;
//         this.startTime = Date.now() - this.deltaTime;
//         this.id = setInterval(() => {
//             const currentTime = Date.now();
//             this.deltaTime = currentTime - this.startTime;
//             this.updateClockface(this.deltaTime);
//         }, 100);
//     }
//     pauseTick(target) {
//         clearInterval(this.id);
//         this.isActive = false;
//     }
//
//     hadleResetTimer({ target }) {
//         clearInterval(this.id);
//         this.isActive = false;
//         this.setActiveBtn(target);
//         this.deltaTime = 0;
//         this.updateClockface(this.deltaTime);
//         this.startBtn.textContent = 'Start';
//         this.listLaps.innerHTML = null;
//         this.startTime = null;
//     }
//
//     hadleLapTimer(time) {
//         if (!this.isActive) return;
//         const item = document.createElement('li');
//         item.textContent = this.timerContent.textContent;
//         this.listLaps.append(item);
//     }
//     updateClockface(time) {
//         const formattedTime = this.getFormatedTime(time);
//         this.timerContent.textContent = formattedTime;
//     }
//     getFormatedTime(mls) {
//         const date = new Date(mls);
//         let min = date.getMinutes();
//         let sec = date.getSeconds();
//         let ms = parseInt(date.getMilliseconds() / 100);
//         if (min < 10) {
//             min = `0${min}`;
//         }
//         if (sec < 10) {
//             sec = `0${sec}`;
//         }
//         return `${min}:${sec}.${ms}`;
//     }
//
//     setActiveBtn(target) {
//         if (target.classList.contains('active')) {
//             return;
//         }
//         this.startBtn.classList.remove('active');
//         this.resetBtn.classList.remove('active');
//
//         target.classList.add('active');
//     }
// }
//
// const firstTimer = new Stopwatch({
//     watches: watches,
// });
// const SecondTimer = new Stopwatch({
//     watches: watches,
// });



// **
// * 1. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Å—Ç–∞—Ä—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–∞–π–º–µ—Ä
// * 2. –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Å—Ç–æ–ø –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ç–∞–π–º–µ—Ä
// * 3. –Ω—É–∂–µ–Ω –æ–±–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π –∏ –º–µ—Ç–æ–¥–æ–≤ —Ç–∞–π–º–µ—Ä–∞
// * 4. –º–µ—Ç–æ–¥ start, stop –∏ –ø–æ–ª–µ timerId
// * 5. xx:xx.x
// */

//  –ù–ê–® - html —Å–∏–Ω—Ç–∞–∫—Å–∏—Å

// <p class="clockface">00:00.0</p>
// <button class="button" data-action="start">Start</button>
// <button class="button" data-action="stop">Stop</button>

//1. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –°–¢–û–ü –°–¢–ê–†–¢

// const startBtn = document.querySelector('button[data-action="start"]');
// const stopBtn = document.querySelector('button[data-action="stop"]');
//
// const timer = {
//     start(){ // –ó–∞–ø—É—Å–∫–∞–µ–º
//         console.log('start');
//     },
//     stop(){  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
//         console.log('stop');
//     }
// }; //
// startBtn.addEventListener('click', timer.start);
// stopBtn.addEventListener('click',timer.stop);

// 2. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –°–¢–û–ü –°–¢–ê–†–¢


// const startBtn = document.querySelector('button[data-action="start"]');
// const stopBtn = document.querySelector('button[data-action="stop"]');
//
// const timer = {
//     id: null,
//     start(){
//         this.id = setInterval(()=>{
//             console.log('interval');
//         }, 100);
//         //console.log('start');
//         //console.log(this);  // <button class="button" data-action="start">Start</button>
//     },
//     stop(){
//         //console.log('stop');
//
//         clearInterval(this.id);
//     }
// };
// startBtn.addEventListener('click', timer.start.bind(timer));
// stopBtn.addEventListener('click',timer.stop.bind(timer));

// 3    —Å—á–∏—Ç–∞–µ–º –ø—Ä–∏ —Å—Ç–∞—Ä—Ç –∏ –æ—Ç—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏ —Å—Ç–æ–ø

// –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –°–¢–ê–†–¢ - –ø–æ–ª—É—á–∏–º –∫–æ–ª –º—Å–µ–∫—É–Ω–¥ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—à–ª–∏ —Å1970 –≥
// –¥–æ –º–æ–º–µ–Ω—Ç–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ—á–∫–∏ –°–¢–ê–†–¢

// 1536479734440
//75 interval


// const startBtn = document.querySelector('button[data-action="start"]');
// const stopBtn = document.querySelector('button[data-action="stop"]');
//
// const timer = {
//     id: null,
//     startTime: null,
//     start(){
//         this.startTime = Date.now(); // –∫–∞–∫ –º—ã —É–∑–Ω–∞–µ–º —Ç–µ–∫—É—à–µ–µ –≤—Ä–µ–º—è –≤ –º—Å–µ–∫—É–Ω–¥
//         console.log(this.startTime);
//         this.id = setInterval(()=>{
//             console.log('interval');
//         }, 100);
//         //console.log('start');
//         //console.log(this);  // <button class="button" data-action="start">Start</button>
//     },
//     stop(){
//         //console.log('stop');
//
//         clearInterval(this.id);
//     }
// };
// –ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É bind
// startBtn.addEventListener('click', timer.start.bind(timer));
// stopBtn.addEventListener('click',timer.stop.bind(timer));

// 4 —Å–≤—è–∂–µ–º —Å –≤—Ä–µ–º–∏–Ω–µ–º
// –ü—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω-–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
// –æ—Ç–Ω—è—Ç—å –æ—Ç —Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–µ



// const startBtn = document.querySelector('button[data-action="start"]');
// const stopBtn = document.querySelector('button[data-action="stop"]');
// const clockFace = document.querySelector('.clockface');
//
// const timer = {
//
//     id: null,
//     startTime: null,
//
//     // –º–µ—Ç–æ–¥
//     start(){
// // –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –∑–∞–ø—É—Å–∫–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –º—ã –∑–∞–ø–∏—à–µ–º —Ç–µ–∫—É—à–µ–µ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è
//
//         this.startTime = Date.now();
//
//         this.id = setInterval(()=>{
// // –ø–æ–ª—É—á–∏–ª–∏ —Ç–µ–∫—É—à–µ–µ –≤—Ä–µ–º—è
//             const currentTime = Date.now();
// // –ø–æ—Å—á–∏—Ç–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏
//
//             const delteTime = currentTime - this.startTime;
//
// // —Ä–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏
//             updateClockFace(delteTime);
//         }, 100);
//
//            },
//     // –º–µ—Ç–æ–¥
//     stop(){
//         clearInterval(this.id);
//     }
// };
// startBtn.addEventListener('click', timer.start.bind(timer));
// stopBtn.addEventListener('click',timer.stop.bind(timer));
//
// function updateClockFace(time) {
//    const formatteredTime =  formatTime(time);
//     clockFace.textContent = formatteredTime;     // –∑–∞–ø–∏—Å–∞–ª–∏ –≤ html textContent
// }
// function formatTime(ms) {
//     const date = new Date(ms);
//
//     let minutes = date.getMinutes();
//     minutes = minutes < 10 ? `0${minutes}` : minutes;  //  –î–æ–±–∞–≤–∏–ª–∏ 0 –ø–µ—Ä–µ–¥ —Ü–∏—Ñ –¥–æ 10
//
//     let seconds = date.getSeconds();
//     seconds = seconds < 10 ? `0${seconds}` : seconds; //
//
//
// // –ø—Ä–∏–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É- –∏ –ø–æ–ª—É—á–∏–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ —Ü–∏—Ñ—Ä—ã .slice(0,1)
//     let mseconds = String(date.getMilliseconds()).slice(0,1);
//     return `${minutes}:${seconds}.${mseconds}`;
// }

// 5. -  –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
// –ø—Ä–æ–≤–µ—Ä–∏–º –∑–∞–ø—É—â–µ–Ω –ª–∏ –Ω–∞—à —Å—á–µ—Ç—á–∏–∫ –∏–ª–∏ –Ω–µ—Ç

//
// const startBtn = document.querySelector('button[data-action="start"]');
// const stopBtn = document.querySelector('button[data-action="stop"]');
// const clockFace = document.querySelector('.clockface');
//
// const timer = {
//     id: null,
//     startTime: null,
//     isActive: false,// —Ñ–ª–∞–∂–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–ø—É—à–µ–Ω –∏–ª–∏ –ù–ï—Ç
//
//     start(){
//         if(this.isActive)return; // –µ—Å–ª–∏ –æ–Ω —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–µ—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–π –∏ –≤—ã—Ö–æ–¥–∏ –∏–∑ —Ñ—É–Ω-–∏
//         // –∏–Ω–∞—á–µ –í—ã–ø–æ–ª–Ω—è–π –≤–µ—Å—å –∫–æ–¥
//         this.isActive = true;
//
//         this.startTime = Date.now();
//
//         this.id = setInterval(()=>{
//             const currentTime = Date.now();
//
//             const delteTime = currentTime - this.startTime;
//
//             updateClockFace(delteTime);
//         }, 100);
//
//     },
//     stop(){
//         clearInterval(this.id);
//     }
// };
// startBtn.addEventListener('click', timer.start.bind(timer));
// stopBtn.addEventListener('click',timer.stop.bind(timer));
//
// function updateClockFace(time) {
//     const formatteredTime =  formatTime(time);
//     clockFace.textContent = formatteredTime;
// }
// function formatTime(ms) {
//     const date = new Date(ms);
//
//     let minutes = date.getMinutes();
//     minutes = minutes < 10 ? `0${minutes}` : minutes;
//
//     let seconds = date.getSeconds();
//     seconds = seconds < 10 ? `0${seconds}` : seconds;
//
//     let mseconds = String(date.getMilliseconds()).slice(0,1);
//     return `${minutes}:${seconds}.${mseconds}`;
// }

// 6.  –Ω–∞ STOP –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
// –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
// delteTime - —Å–±—Ä–æ—Å–∏—Ç—å –≤  0
// -  –¥–µ–ª–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–æ–º –æ–±—å–µ–∫—Ç–∞     delteTime : 0,

// const startBtn = document.querySelector('button[data-action="start"]');
// const stopBtn = document.querySelector('button[data-action="stop"]');
// const clockFace = document.querySelector('.clockface');
//
// const timer = {
//     id: null,
//     startTime: null,
//     delteTime : 0,
//     isActive: false,// —Ñ–ª–∞–∂–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–ø—É—à–µ–Ω –∏–ª–∏ –ù–ï—Ç
//
//     // –º–µ—Ç–æ–¥—ã  –°—Ç–∞—Ä—Ç –°—Ç–æ–ø
//     start(){
//         if(this.isActive)return; // –µ—Å–ª–∏ –æ–Ω —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–µ—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–π –∏ –≤—ã—Ö–æ–¥–∏ –∏–∑ —Ñ—É–Ω-–∏
//         // –∏–Ω–∞—á–µ –í—ã–ø–æ–ª–Ω—è–π –≤–µ—Å—å –∫–æ–¥
//         this.isActive = true;
//         this.startTime = Date.now();
//
//         this.id = setInterval(()=>{
//             const currentTime = Date.now();
//
//             this.delteTime = currentTime - this.startTime;
//             updateClockFace(this.delteTime);
//         }, 100);
//     },
//     stop(){
//         clearInterval(this.id);
//         this.delteTime = 0;
//         updateClockFace(this.delteTime);
//         this.isActive = false;
//     }
// };
// // –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –°—Ç–∞—Ä—Ç –°—Ç–æ–ø
// startBtn.addEventListener('click', timer.start.bind(timer));
// stopBtn.addEventListener('click',timer.stop.bind(timer));
//
// function updateClockFace(time) {
//     const formatteredTime =  formatTime(time);
//     clockFace.textContent = formatteredTime;
// } // –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//
// function formatTime(ms) {
//     const date = new Date(ms);
//
//     let minutes = date.getMinutes();
//     minutes = minutes < 10 ? `0${minutes}` : minutes;
//
//     let seconds = date.getSeconds();
//     seconds = seconds < 10 ? `0${seconds}` : seconds;
//
//     let mseconds = String(date.getMilliseconds()).slice(0,1);
//     return `${minutes}:${seconds}.${mseconds}`;
// }  // —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤–∏–¥

// 7. ========    —Ç–µ–ø–µ—Ä—å –¥–æ–±—ã–≤–∏–º –ø–æ—É–∑—É


// const startBtn = document.querySelector('button[data-action="start"]');
// const stopBtn = document.querySelector('button[data-action="stop"]');
// const clockFace = document.querySelector('.clockface');
//
// const timer = {
//     id: null,
//     startTime: null,
//     delteTime : 0,
//     isActive: false,// —Ñ–ª–∞–∂–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–ø—É—à–µ–Ω –∏–ª–∏ –ù–ï—Ç
//
//     // –º–µ—Ç–æ–¥—ã  –°—Ç–∞—Ä—Ç –°—Ç–æ–ø
//     start(){
//         if(this.isActive)return; // –µ—Å–ª–∏ –æ–Ω —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–µ—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–π –∏ –≤—ã—Ö–æ–¥–∏ –∏–∑ —Ñ—É–Ω-–∏
//         // –∏–Ω–∞—á–µ –í—ã–ø–æ–ª–Ω—è–π –≤–µ—Å—å –∫–æ–¥
//         this.isActive = true;
//         this.startTime = Date.now() - this.delteTime; // = –≤—Ä–µ–º–µ–Ω–∏ –ø–∞—É–∑—ã
//
//
//         this.id = setInterval(()=>{
//             const currentTime = Date.now();
//
//             this.delteTime = currentTime - this.startTime;
//             updateClockFace(this.delteTime);
//         }, 100);
//     },
//
//     stop(){ // —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –ø–æ—É–∑–≤–∞
//         clearInterval(this.id); // –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª
//         this.isActive = false;
//     },
//     reset(){
//         this.stop();
//         this.delteTime = 0;
//         updateClockFace(this.delteTime);
//     }
// };
// // –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –°—Ç–∞—Ä—Ç –°—Ç–æ–ø
//
// startBtn.addEventListener('click', timer.start.bind(timer));
// stopBtn.addEventListener('click',timer.stop.bind(timer));
//
// function updateClockFace(time) {
//     const formatteredTime =  formatTime(time);
//     clockFace.textContent = formatteredTime;
// } // –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
//
// function formatTime(ms) {
//     const date = new Date(ms);
//
//     let minutes = date.getMinutes();
//     minutes = minutes < 10 ? `0${minutes}` : minutes;
//
//     let seconds = date.getSeconds();
//     seconds = seconds < 10 ? `0${seconds}` : seconds;
//
//     let mseconds = String(date.getMilliseconds()).slice(0,1);
//     return `${minutes}:${seconds}.${mseconds}`;
// }  // —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤–∏–¥
