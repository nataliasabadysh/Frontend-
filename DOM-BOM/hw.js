'use strict';

/*
  Есть список категорий с классом categories (на вкладке HTML).

  Напишите код, который для каждого элемента li (первая вложенность)
  в списке categories выведет в консоль:
  - Текст непосредственно в нём (название категории)
  - Количество всех вложенных в него элементов li

  К примеру:
    Категория: Животные
    Количество вложенных li: 4
*/

const items = document.querySelectorAll('.categories > li');

items.forEach(item => {
    console.log('Категория :', item.firstChild);

    console.log('Количество вложенных ли :', item.firstElementChild.children.length);
});


// Текстовый узел и Узел элемент
// возмем all li   - const items = document.querySelector('.categories li');
//'.categories > li' i первой вложенности
// null - если не найдет
//псевдомассив (значит есть length)children - все li


// ===== 2

/*
  Дан список с классом .list
	- Найдите первого потомка списка и сделайте его текст красного цвета
	- Найдите последнего потомка списка и сделайте его текст синего цвета
*/



// ==== 3
// ==== 4
/*
  Напишите скрипт для создания списка ul.

  Для каждого пункта:
    - Запрашивайте содержимое пункта li у пользователя с помощью prompt.
    - Создавайте пункт и добавляйте его к ul.
    - Процесс прерывается, когда пользователь нажимает Cancel.
    - Все элементы списка должны создаваться динамически.
*/

do{
    let userInput = prompt('Давай');
    if(userInput === null){
        break;
    }
}while(true){
    // userInput.createElement('li');
}

// ===  5

/*
  Есть список с классом .size-filter из произвольного
  количества чекбоксов, каждый из которых содержит
  размер одежды в фильтре.

  Напишите функцию getInputsData(inputs), которая
  принимает 1 параметр inputs - массив тех инпутов
  у которых состояние checked.

  Возвращает массив значений атрибута value.
*/

 const getInputsData = function (inputs) {
     if('input[checked]'){ // как выбрать все чекнутые
     }
 };
 // el.dataset.prop

// getInputsData.getAttribute(value);
// querySelectorAll('input[checked]');
// console.log();


// ==== 6
/*
  Создайте функцию createPostCard(), которая
  создает и возвращает DOM-узел карточки поста.

  Разметка с классами есть на вкладке HTML.
  Стили на вкладке CSS.

  Используйте createElement для создания узлов.
  Добавьте классы и атрибуты.
*/

// ==== 7

/*
  В HTML-документе уже есть тег с id="root" (вкладка HTML)

  Создайте функцию createBoxes(num), которая принимает 1 параметр num - число.

  Функция создает столько div, сколько указано в num и возвращает их в одном
  общем контейнере. После чего необходимо повесить результат работы функции
  в div с id="#root"

  Каждый div:
    - Имеет случайный rgb цвет фона
    - Размеры самого первого div - 30px на 30px.
    - Каждый следующий div после первого, должен быть шире и выше предыдущего
      на 10px
*/




